{"version":3,"sources":["views/App/Booking/index.js"],"names":["Title","Typography","Step","Steps","Option","Select","steps","title","icon","getStatus","step","current","memo","useMergeState","state","setState","map","status","key","className","Item","label","name","rules","required","message","defaultValue","style","width","onChange","value","console","log","disabled","length","type","onClick","success","margin"],"mappings":"wSASOA,EAASC,IAATD,MACCE,EAASC,IAATD,KACAE,EAAWC,IAAXD,OAEFE,EAAQ,CACZ,CAACC,MAAO,OAAQC,KAAM,kBAAC,IAAD,OACtB,CAACD,MAAO,WAAYC,KAAM,kBAAC,IAAD,OAC1B,CAACD,MAAO,WAAYC,KAAM,kBAAC,IAAD,OAC1B,CAACD,MAAO,UAAWC,KAAM,kBAAC,IAAD,OACzB,CAACD,MAAO,MAAOC,KAAM,kBAAC,IAAD,OACrB,CAACD,MAAO,OAAQC,KAAM,kBAAC,IAAD,QAGlBC,EAAY,SAACC,EAAMC,GAAP,OAAmBD,IAASC,EAAU,UAAaD,EAAOC,EAAU,SAAW,QAElFC,0BAAK,WAAO,IAAD,EACEC,YAAc,CACtCF,QAAS,IAFa,mBACjBG,EADiB,KACVC,EADU,KAIjBJ,EAAWG,EAAXH,QAUP,OAAQ,oCACN,kBAACX,EAAD,iBACA,kBAAC,IAAD,CAAOW,QAASA,GACfL,EAAMU,KAAI,WAAgBN,GAAhB,IAAEH,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAT,OACT,kBAACN,EAAD,cAAU,CAACe,OAAQR,EAAUC,EAAMC,GAAUJ,QAAOC,KAAME,IAASC,EAAU,kBAAC,IAAD,MAAsBH,GAAnG,CAA0GU,IAAKX,SAGjH,yBAAKY,UAAU,iBACb,kBAAC,IAAKC,KAAN,CACEC,MAAM,eACNC,KAAK,eACLC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAEnC,kBAAC,IAAD,CAAQC,aAAa,OAAOC,MAAO,CAAEC,MAAO,KAAOC,SAjBzD,SAAsBC,GACpBC,QAAQC,IAAR,mBAAwBF,MAiBlB,kBAAC1B,EAAD,CAAQ0B,MAAM,QAAd,QACA,kBAAC1B,EAAD,CAAQ0B,MAAM,QAAd,QACA,kBAAC1B,EAAD,CAAQ0B,MAAM,WAAWG,UAAQ,GAAjC,YAGA,kBAAC7B,EAAD,CAAQ0B,MAAM,YAAd,eAIN,yBAAKX,UAAU,gBACZR,EAAUL,EAAM4B,OAAS,GACxB,kBAAC,IAAD,CAAQC,KAAK,UAAUC,QAAS,kBAjCnBrB,EAAS,CAAEJ,QAASA,EAAU,MAiC3C,QAIDA,IAAYL,EAAM4B,OAAS,GAC1B,kBAAC,IAAD,CAAQC,KAAK,UAAUC,QAAS,kBAAMX,IAAQY,QAAQ,0BAAtD,QAID1B,EAAU,GACT,kBAAC,IAAD,CAAQgB,MAAO,CAAEW,OAAQ,SAAWF,QAAS,kBAzChCrB,EAAS,CAAEJ,QAASA,EAAU,MAyC3C","file":"static/js/14.a4e116fa.chunk.js","sourcesContent":["import React, {memo, useState} from 'react'\r\n\r\nimport {useMergeState} from '../../../redux/hooks'\r\n\r\nimport './style.css'\r\n\r\nimport {Form, Select, Row, Typography, Steps, Col, Button, message} from 'antd'\r\nimport { UserOutlined, HomeOutlined, FieldTimeOutlined,  EyeOutlined, MoneyCollectOutlined, LoadingOutlined, SmileOutlined, AccountBookOutlined } from '@ant-design/icons';\r\n\r\nconst {Title} = Typography\r\nconst { Step } = Steps;\r\nconst { Option } = Select;\r\n\r\nconst steps = [\r\n  {title: 'Book', icon: <AccountBookOutlined />},\r\n  {title: 'Location', icon: <HomeOutlined />},\r\n  {title: 'Schedule', icon: <FieldTimeOutlined />},\r\n  {title: 'Preview', icon: <EyeOutlined />},\r\n  {title: 'Pay', icon: <MoneyCollectOutlined />},\r\n  {title: 'Done', icon: <SmileOutlined />},\r\n]\r\n\r\nconst getStatus = (step, current) => step === current ? 'process' :  step < current ? 'finish' : 'wait'\r\n\r\nexport default memo(() => {\r\n  const [state, setState] = useMergeState({\r\n    current: 0,\r\n  })\r\n  const {current} = state\r\n\r\n  const next = () => setState({ current: current + 1 });\r\n\r\n  const prev = () => setState({ current: current - 1 });\r\n\r\n  function handleChange(value) {\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  return (<>\r\n    <Title>Book Now</Title>\r\n    <Steps current={current}>\r\n    {steps.map(({title, icon}, step) => (\r\n      <Step {...{status: getStatus(step, current), title, icon: step === current ? <LoadingOutlined /> : icon}} key={title} />\r\n    ))}\r\n    </Steps>\r\n    <div className=\"steps-content\">\r\n      <Form.Item\r\n        label=\"Service Type\"\r\n        name=\"service_type\"\r\n        rules={[{ required: true, message: 'Please input your username!' }]}\r\n      >\r\n        <Select defaultValue=\"lucy\" style={{ width: 120 }} onChange={handleChange}>\r\n          <Option value=\"jack\">Jack</Option>\r\n          <Option value=\"lucy\">Lucy</Option>\r\n          <Option value=\"disabled\" disabled>\r\n            Disabled\r\n          </Option>\r\n          <Option value=\"Yiminghe\">yiminghe</Option>\r\n        </Select>\r\n      </Form.Item>\r\n    </div>\r\n    <div className=\"steps-action\">\r\n      {current < steps.length - 1 && (\r\n        <Button type=\"primary\" onClick={() => next()}>\r\n          Next\r\n        </Button>\r\n      )}\r\n      {current === steps.length - 1 && (\r\n        <Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\r\n          Done\r\n        </Button>\r\n      )}\r\n      {current > 0 && (\r\n        <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n          Previous\r\n        </Button>\r\n      )}\r\n    </div>\r\n  </>)\r\n})\r\n"],"sourceRoot":""}