{"version":3,"sources":["views/App/Booking/index.js"],"names":["Title","Typography","Step","Steps","Option","Select","steps","title","icon","getStatus","step","current","memo","useMergeState","state","setState","map","status","key","className","BookForm","BookLocation","level","length","type","onClick","message","success","style","margin","offset","span","Item","label","name","rules","required","value","placeholder","defaultValue","TextArea","handleChange","console","log","onChange","count"],"mappings":"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","file":"static/js/14.3a451745.chunk.js","sourcesContent":["import React, {memo, useState} from 'react'\r\n\r\nimport {useMergeState} from '../../../redux/hooks'\r\n\r\nimport './style.css'\r\n\r\nimport {Input, Form, Select, Row, Typography, Steps, Col, Button, message} from 'antd'\r\nimport { UserOutlined, HomeOutlined, FieldTimeOutlined,  EyeOutlined, MoneyCollectOutlined, LoadingOutlined, SmileOutlined, AccountBookOutlined } from '@ant-design/icons';\r\n\r\nconst {Title} = Typography\r\nconst { Step } = Steps;\r\nconst { Option } = Select;\r\n\r\nconst steps = [\r\n  {title: 'Book', icon: <AccountBookOutlined />},\r\n  {title: 'Location', icon: <HomeOutlined />},\r\n  {title: 'Schedule', icon: <FieldTimeOutlined />},\r\n  {title: 'Preview', icon: <EyeOutlined />},\r\n  {title: 'Pay', icon: <MoneyCollectOutlined />},\r\n  {title: 'Done', icon: <SmileOutlined />},\r\n]\r\n\r\nconst getStatus = (step, current) => step === current ? 'process' :  step < current ? 'finish' : 'wait'\r\n\r\nexport default memo(() => {\r\n  const [state, setState] = useMergeState({\r\n    current: 0,\r\n  })\r\n  const {current} = state\r\n\r\n  const next = () => setState({ current: current + 1 });\r\n\r\n  const prev = () => setState({ current: current - 1 });\r\n\r\n  return (<>\r\n    <Title>Book Now</Title>\r\n    <Steps current={current}>\r\n    {steps.map(({title, icon}, step) => (\r\n      <Step {...{status: getStatus(step, current), title, icon: step === current ? <LoadingOutlined /> : icon}} key={title} />\r\n    ))}\r\n    </Steps>\r\n    <div className=\"steps-content\">\r\n      {current === 0 ? <BookForm /> :\r\n      current === 1 ? (\r\n        <BookLocation />\r\n      ) : (\r\n        <Title level={4}>Coming Soon</Title>\r\n      )}\r\n    </div>\r\n    <div className=\"steps-action\">\r\n      {current < steps.length - 1 && (\r\n        <Button type=\"primary\" onClick={() => next()}>\r\n          Next\r\n        </Button>\r\n      )}\r\n      {current === steps.length - 1 && (\r\n        <Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\r\n          Done\r\n        </Button>\r\n      )}\r\n      {current > 0 && (\r\n        <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n          Previous\r\n        </Button>\r\n      )}\r\n    </div>\r\n  </>)\r\n})\r\n\r\nconst BookLocation = () => {\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Col offset={4} span={12}>\r\n        <Form.Item\r\n          label=\"House Address\"\r\n          name=\"address\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Input value=\"\" placeholder='Enter Address' />\r\n        </Form.Item>\r\n      </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col offset={4} span={5}>\r\n          <Form.Item\r\n            label=\"Town/City\"\r\n            name=\"city\"\r\n            rules={[{ required: true, message: 'Please input your username!' }]}\r\n          >\r\n            <Input value=\"\" placeholder='Enter Town or City' />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col offset={2} span={5}>\r\n          <Form.Item\r\n            label=\"State\"\r\n            name=\"state\"\r\n            rules={[{ required: true, message: 'Please input your username!' }]}\r\n          >\r\n            <Select defaultValue=\"lagos\" style={{  }}>\r\n              <Option value=\"lagos\">Lagos</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Col offset={4} span={12}>\r\n        <Form.Item\r\n          label=\"Intructions\"\r\n          name=\"state\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Input.TextArea placeholder='Leave Instructions' />\r\n        </Form.Item>\r\n      </Col>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst BookForm = () => {\r\n  const rooms = [1,2,3,4,5,6]\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col offset={6} span={8}>\r\n        <Form.Item\r\n          label=\"Service Type\"\r\n          name=\"service_type\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Select defaultValue=\"regular\" style={{  }} onChange={handleChange}>\r\n            <Option value=\"regular\">Regular Cleaning</Option>\r\n            <Option value=\"deep\">Deep Cleaning</Option>\r\n            <Option value=\"fumigation\">Fumigation</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      </Col>\r\n      <Col offset={6} span={8}>\r\n        <Form.Item\r\n          label=\"Amount Of Rooms\"\r\n          name=\"rooms_count\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Select defaultValue={1} style={{  }} onChange={handleChange}>\r\n          {rooms.map((count) => (\r\n            <Option value={count}>{count} Room</Option>\r\n          ))}\r\n          </Select>\r\n        </Form.Item>\r\n      </Col>\r\n      <Col offset={6} span={8}>\r\n        <Form.Item\r\n          label=\"Clean Interval\"\r\n          name=\"clean_interval\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Select defaultValue={'one time'} style={{  }} onChange={handleChange}>\r\n            <Option value={'one time'}>One Time</Option>\r\n            <Option value={'monthly'}>Monthly</Option>\r\n            <Option value={'weekly'}>Weekly</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n"],"sourceRoot":""}