{"version":3,"sources":["views/App/Booking/index.js"],"names":["Title","Typography","Paragraph","Step","Steps","Option","Select","steps","title","icon","getStatus","step","current","memo","useMergeState","state","setState","map","status","key","className","BookForm","BookLocation","Schedule","Preview","level","justify","align","disabled","onClick","type","length","message","success","offset","span","Item","label","name","rules","required","value","placeholder","defaultValue","style","TextArea","orientation","PLine","disabledDate","Date","now","onChange","date","console","log","moment","add","format","handleChange","count"],"mappings":"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","file":"static/js/13.0efb9b14.chunk.js","sourcesContent":["import React, {memo, useState} from 'react'\r\n\r\nimport {useMergeState} from '../../../redux/hooks'\r\nimport moment from 'moment'\r\n\r\nimport './style.css'\r\n\r\nimport { Divider, Space, TimePicker, DatePicker, Input,\r\n  Form, Select, Row, Typography, Steps, Col, Button,\r\n  message} from 'antd'\r\nimport { UserOutlined, HomeOutlined, FieldTimeOutlined,  EyeOutlined, MoneyCollectOutlined, LoadingOutlined, SmileOutlined, AccountBookOutlined } from '@ant-design/icons';\r\n\r\nconst {Title, Paragraph} = Typography\r\nconst { Step } = Steps;\r\nconst { Option } = Select;\r\n\r\nconst steps = [\r\n  {title: 'Book', icon: <AccountBookOutlined />},\r\n  {title: 'Location', icon: <HomeOutlined />},\r\n  {title: 'Schedule', icon: <FieldTimeOutlined />},\r\n  {title: 'Preview', icon: <EyeOutlined />},\r\n  {title: 'Pay', icon: <MoneyCollectOutlined />},\r\n  {title: 'Done', icon: <SmileOutlined />},\r\n]\r\n\r\nconst getStatus = (step, current) => step === current ? 'process' :  step < current ? 'finish' : 'wait'\r\n\r\nexport default memo(() => {\r\n  const [state, setState] = useMergeState({\r\n    current: 0,\r\n  })\r\n  const {current} = state\r\n\r\n  const next = () => setState({ current: current + 1 });\r\n\r\n  const prev = () => setState({ current: current - 1 });\r\n\r\n  return (<>\r\n    <Title>Book Now</Title>\r\n    <Steps current={current}>\r\n    {steps.map(({title, icon}, step) => (\r\n      <Step {...{status: getStatus(step, current), title, icon: step === current ? <LoadingOutlined /> : icon}} key={title} />\r\n    ))}\r\n    </Steps>\r\n    <div className=\"steps-content\">\r\n      {current === 0 ? (\r\n        <BookForm />\r\n      ) : current === 1 ? (\r\n        <BookLocation />\r\n      ) : current === 2 ? (\r\n        <Schedule />\r\n      ) : current === 3 ? (\r\n        <Preview />\r\n      ) : (\r\n        <Title level={4}>Coming Soon</Title>\r\n      )}\r\n    </div>\r\n    <Row justify='space-between' align='middle' className=\"steps-action\">\r\n      <Button\r\n        disabled={current === 0}\r\n        onClick={() => prev()}>\r\n        Previous\r\n      </Button>\r\n\r\n      <Title level={3}>N18,000</Title>\r\n\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => current === steps.length - 1 ? message.success('Processing complete!') : next()}>\r\n      {current === steps.length - 1 ? 'Done' : 'Next'}\r\n      </Button>\r\n    </Row>\r\n  </>)\r\n})\r\n\r\nconst BookLocation = () => {\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Col offset={4} span={12}>\r\n        <Form.Item\r\n          label=\"House Address\"\r\n          name=\"address\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Input value=\"\" placeholder='Enter Address' />\r\n        </Form.Item>\r\n      </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col offset={4} span={5}>\r\n          <Form.Item\r\n            label=\"Town/City\"\r\n            name=\"city\"\r\n            rules={[{ required: true, message: 'Please input your username!' }]}\r\n          >\r\n            <Input value=\"\" placeholder='Enter Town or City' />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col offset={2} span={5}>\r\n          <Form.Item\r\n            label=\"State\"\r\n            name=\"state\"\r\n            rules={[{ required: true, message: 'Please input your username!' }]}\r\n          >\r\n            <Select defaultValue=\"lagos\" style={{  }}>\r\n              <Option value=\"lagos\">Lagos</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Col offset={4} span={12}>\r\n        <Form.Item\r\n          label=\"Intructions\"\r\n          name=\"state\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Input.TextArea placeholder='Leave Instructions' />\r\n        </Form.Item>\r\n      </Col>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Preview = () => {\r\n  return (\r\n    <div>\r\n      <Title level={3}>Confirm Booking</Title>\r\n      <Divider orientation=\"center\">Booking Details</Divider>\r\n      <PLine label='Service Type' value='Regular' />\r\n      <PLine label='Number Of Rooms' value='1' />\r\n      <PLine label='Cleaning Interval' value='One Time' />\r\n      <Divider orientation=\"center\">Location Details</Divider>\r\n      <PLine label='Address' value='1A City of praize plaza, Akins Bus stop' />\r\n      <PLine label='City/Town' value='Ajah' />\r\n      <PLine label='State' value='Lagos' />\r\n      <Divider orientation=\"center\">Schedule Details</Divider>\r\n      <PLine label='Date' value='2020-07-22' />\r\n      <PLine label='Time' value='01:21' />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PLine = ({label, value}) => <Paragraph>{label}:  {value}</Paragraph>\r\n\r\nconst Schedule = () => {\r\n  const onChange = (date) => console.log({date})\r\n\r\n  const disabledDate = current => Date.now() > current\r\n  const format = 'HH:mm';\r\n\r\n  return (<div>\r\n    <Paragraph>When Should We Come?</Paragraph>\r\n    <Row align='middle' justify='center'>\r\n      <Space>\r\n        <DatePicker disabledDate={disabledDate} onChange={onChange} />\r\n        <TimePicker\r\n          defaultValue={moment(moment().add(1, 'hours'), format)}\r\n          format={format}\r\n        />\r\n      </Space>\r\n    </Row>\r\n  </div>)\r\n}\r\n\r\nconst BookForm = () => {\r\n  const rooms = [1,2,3,4,5,6]\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col offset={6} span={8}>\r\n        <Form.Item\r\n          label=\"Service Type\"\r\n          name=\"service_type\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Select defaultValue=\"regular\" style={{  }} onChange={handleChange}>\r\n            <Option value=\"regular\">Regular Cleaning</Option>\r\n            <Option value=\"deep\">Deep Cleaning</Option>\r\n            <Option value=\"fumigation\">Fumigation</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      </Col>\r\n      <Col offset={6} span={8}>\r\n        <Form.Item\r\n          label=\"Amount Of Rooms\"\r\n          name=\"rooms_count\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Select defaultValue={1} style={{  }} onChange={handleChange}>\r\n          {rooms.map((count) => (\r\n            <Option value={count}>{count} Room</Option>\r\n          ))}\r\n          </Select>\r\n        </Form.Item>\r\n      </Col>\r\n      <Col offset={6} span={8}>\r\n        <Form.Item\r\n          label=\"Clean Interval\"\r\n          name=\"clean_interval\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Select defaultValue={'one time'} style={{  }} onChange={handleChange}>\r\n            <Option value={'one time'}>One Time</Option>\r\n            <Option value={'monthly'}>Monthly</Option>\r\n            <Option value={'weekly'}>Weekly</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n"],"sourceRoot":""}